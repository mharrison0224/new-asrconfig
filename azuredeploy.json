{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vpnType": {
            "type": "String",
            "metadata": {
                "description": "Route based (Dynamic Gateway) or Policy based (Static Gateway)"
            },
            "defaultValue": "RouteBased",
            "allowedValues": [
                "RouteBased",
                "PolicyBased"
            ]
        },
        "localGatewayName": {
            "type": "string",
            "defaultValue": "LNGW01",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing your local/on-prem gateway"
            }
        },
        "localGatewayIpAddress": {
            "type": "string",
            "metadata": {
                "description": "Public IP of your local/on-prem gateway"
            }
        },
        "localAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "CIDR block representing the address space of your local/on-prem network's Subnet"
            }
        },
        "onPremDNS": {
            "type": "string",
            "metadata": {
                "description": "IP Address of On-premises DNS Server to be used as Secondary DNS in Azure VNet (example: 192.168.10.10)"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "azureVnet",
            "metadata": {
                "description": "Arbitrary name for the Azure Virtual Network"
            }
        },
        "azureVNetAddressPrefix": {
            "type": "string",
            "defaultValue": "172.10.0.0/16",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure VNet"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "DefaultSubnet",
            "metadata": {
                "description": "Arbitrary name for the Azure Subnet"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "172.10.10.0/24",
            "metadata": {
                "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
            }
        },
        "gatewaySubnetPrefix": {
            "type": "string",
            "defaultValue": "172.10.255.0/28",
            "metadata": {
                "description": "CIDR block for gateway subnet, subset of azureVNetAddressPrefix address space"
            }
        },
        "gatewayPublicIPName": {
            "type": "string",
            "defaultValue": "AZGW01-PublicIP",
            "metadata": {
                "description": "Arbitrary name for public IP resource used for the new azure gateway"
            }
        },
        "gatewayName": {
            "type": "string",
            "defaultValue": "AZGW01",
            "metadata": {
                "description": "Arbitrary name for the new gateway"
            }
        },
        "connectionName": {
            "type": "string",
            "defaultValue": "S2S-VPN",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "sharedKey": {
            "type": "string",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "AZDC01",
            "metadata": {
                "description": "Name of the sample VM to create"
            }
        },
        "vmIP": {
            "type": "string",
            "defaultValue": "172.10.10.10",
            "metadata": {
                "description": "Static Private IP Address of Virtual Machine"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for sample VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "User password for sample VM"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage Account Name for VM Disk"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/mharrison0224/new-asrconfig/master/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2012-R2-Datacenter",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "nicName": "[concat(parameters('vmName'), '-NIC')]",
        "vmStorageAccountContainerName": "vhds",
        "OSDiskName": "osDisk",
        "ADDSDiskName": "ADDSDisk",
        "vmPublicIPName": "[concat(parameters('vmName'), '-PublicIP')]",
        "ScriptFileName": "InstallADDS.ps1",
        "ScriptFolder": ".",
        "api-version": "2015-06-15",
        "storage-api-version": "2015-05-01-preview",
        "apiVersion": "2015-06-15"
    },
    "resources": [
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/localNetworkGateways",
        "name": "[parameters('localGatewayName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "localNetworkAddressSpace": {
            "addressPrefixes": [
              "[parameters('localAddressPrefix')]"
            ]
          },
          "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "name": "[parameters('connectionName')]",
        "type": "Microsoft.Network/connections",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
          "[concat('Microsoft.Network/localNetworkGateways/', parameters('localGatewayName'))]"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]"
          },
          "localNetworkGateway2": {
            "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName'))]"
          },
          "connectionType": "IPsec",
          "routingWeight": 10,
          "sharedKey": "[parameters('sharedKey')]"
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('azureVNetAddressPrefix')]"
            ]
        },
        "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('vmIP')]",
                        "[parameters('onPremDNS')]"
                    ]
        },
          "subnets": [
            {
              "name": "[parameters('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
              }
            },
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('gatewayPublicIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('vmPublicIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "[variables('storage-api-version')]",
        "name": "[parameters('newStorageAccountName')]",
        "location": "[resourceGroup().location]",
        "type": "Microsoft.Storage/storageAccounts",
        "properties": {
          "accountType": "[parameters('storageAccountType')]"
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "name": "[parameters('gatewayName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('gatewaySubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
                }
              },
              "name": "vnetGatewayConfig"
            }
          ],
          "gatewayType": "Vpn",
          "vpnType": "[parameters('vpnType')]",
          "enableBgp": "false"
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('vmPublicIPName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
          "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[parameters('vmIP')]",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPublicIPName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "[variables('api-version')]",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vmName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": 50,
              "lun": 1,
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'dataDisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ],
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/','osDisk1.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        },
        }
    ],
}
